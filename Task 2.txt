1. Introduction to APIs & Endpoints
	-------------------------------------------------------------------------------------------------------------------------
		-> An API (Application Programming Interface) allows different applications to communicate.
		-> Endpoints are specific URLs that clients interact with.

		-> Common HTTP methods:
				1. GET: Retrieve data
				2. POST: Create data
				3. PUT: Update data
				4. DELETE: Remove data

2️. What is an Endpoint?
	---------------------------------------------------------------------------------------------------------------------------
		-> An endpoint is a specific URL where an API receives requests and returns responses.
		-> It follows this format:

				=> https://example.com/api/{controller}/{action}/{id}
				=> https://example.com/api/products/1 → Fetches product with ID 1.

				=> Each endpoint is tied to an action method in a controller that processes the request.

		-> How Each Endpoint works :

			1. GET /api/product → Returns a list of products.
			2. GET /api/product/1 → Returns product with ID 1.
			3. POST /api/product → Accepts a new product in the request body and adds it to the list.
			4. PUT /api/product/1 → Updates product with ID 1.
			5. DELETE /api/product/1 → Deletes product with ID 1.


3. Request-Response Flow in .NET Web API
	----------------------------------------------------------------------------------------------------------------------------
		-> Client sends a request
		-> ASP.NET Web API receives the request
		-> Controller processes the request
		-> Server interacts with the database
		-> API returns a response to the client

4. Key Takeaways : 
	-----------------------------------------------------------------------------------------------------------------------------
		-> .NET Web API is used to create scalable and secure REST APIs.
		-> Endpoints define how the client interacts with the server.
		-> Entity Framework Core integrates databases.
		-> JWT Authentication secures endpoints.
		-> Frontend apps consume APIs via Fetch or Axios.
		-> Deployment can be done via Docker or cloud platforms.